/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesapp.view;


import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import salesapp.controller.ClienteDB;
import salesapp.controller.MotoDB;
import salesapp.controller.VentaDB;
import salesapp.model.Cliente;
import salesapp.model.Moto;
import salesapp.model.Venta;

/**
 *
 * @author GUERRA
 */
public class SalesMainApp extends javax.swing.JFrame {

    /**
     * Creates new form SalesMainApp
     */
    MyTableModelClient clientModel;
    MyTableModelMoto motoModel;
    MyTableModelVenta ventaModel;
    public String dniSelected="";
    public int idMotoselected;
    public int idCliente;
    public TableRowSorter<TableModel> sorterSaleClient;
    public TableRowSorter<TableModel> sorterSaleMoto;
    public SalesMainApp() {
        initComponents();
        
        butgroupLona.add(siLona);
        butgroupLona.add(noLona);
        
        btngroupSoat.add(siSoat);
        btngroupSoat.add(noSoat);  
        
        
        initComponents2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents2(){
        // modelo para clientes
        clientModel= new MyTableModelClient();
        tableClientes.setModel(clientModel);
        // Instanciamos el TableRowSorter y lo añadimos al JTable
        TableRowSorter<TableModel> sorterClient = new TableRowSorter<>(clientModel);
        tableClientes.setRowSorter(sorterClient); 

        tableClientes.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = tableClientes.getSelectedRow();
                idCliente=Integer.parseInt(table_clientes.getValueAt(selRow, 0).toString());
                  
                textNombres.setText(tableClientes.getValueAt(selRow, 1).toString());
                textPat.setText(tableClientes.getValueAt(selRow, 2).toString());
                textMat.setText(tableClientes.getValueAt(selRow, 3).toString());
                dniSelected = tableClientes.getValueAt(selRow, 4).toString();                
                textDir.setText(tableClientes.getValueAt(selRow, 5).toString());
                textDni.setText(tableClientes.getValueAt(selRow, 4).toString());
                textCel.setText(tableClientes.getValueAt(selRow, 6).toString());
                comboEstado.setSelectedItem(tableClientes.getValueAt(selRow, 7).toString());
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-mm-dd");
                try {
                    fechaNacimiento.setDate(formatter.parse(tableClientes.getValueAt(selRow, 8).toString()));
                    //fechaNacimiento.setDate( SimpleDateFormat.parse(tableClientes.getValueAt(selRow, 8).toString()));
                } catch (ParseException ex) {
                    Logger.getLogger(SalesMainApp.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        // modelo para motos
        motoModel= new MyTableModelMoto();
        tableMotos.setModel(motoModel);
        // Instanciamos el TableRowSorter y lo añadimos al JTable
        TableRowSorter<TableModel> sorterMoto = new TableRowSorter<>(motoModel);
        tableMotos.setRowSorter(sorterMoto);         
        tableMotos.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = tableMotos.getSelectedRow();
                 
                idMotoselected=Integer.parseInt(tableMotos.getValueAt(selRow, 0).toString());
                textProd.setText(tableMotos.getValueAt(selRow, 1).toString());
                textModel.setText(tableMotos.getValueAt(selRow, 2).toString());
                comboTipo.setSelectedItem(tableMotos.getValueAt(selRow, 3).toString());  
                textColor.setText(tableMotos.getValueAt(selRow, 4).toString());
                textPrecLista.setText(tableMotos.getValueAt(selRow, 5).toString());
                textPrecContado.setText(tableMotos.getValueAt(selRow, 6).toString());
                textStock.setText(tableMotos.getValueAt(selRow, 7).toString());              
            }
        });
        
        ventaModel= new MyTableModelVenta();
        table_ventas.setModel(ventaModel);
        // Instanciamos el TableRowSorter y lo añadimos al JTable
        TableRowSorter<TableModel> sorterSale = new TableRowSorter<>(ventaModel);
        table_ventas.setRowSorter(sorterSale);         
        
        
        // ventas pestaña ============================
        
        table_clientes.setModel(clientModel);
        sorterSaleClient = new TableRowSorter<>(clientModel);
        table_clientes.setRowSorter(sorterSaleClient); 
        table_clientes.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = table_clientes.getSelectedRow();
                idCliente=Integer.parseInt(table_clientes.getValueAt(selRow, 0).toString());
                txtdni.setText(table_clientes.getValueAt(selRow, 4).toString());  
                txtcliente.setText(table_clientes.getValueAt(selRow, 1).toString());
            }
        });    
        
        
        
        
        table_motos.setModel(motoModel);
        sorterSaleMoto = new TableRowSorter<>(motoModel);
        table_motos.setRowSorter(sorterSaleMoto);  
        table_motos.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = table_motos.getSelectedRow();
                
                //verificamos si hay stock
                if(table_motos.getValueAt(selRow, 7).toString().equals("0")){
                    // no hay stock
                    JOptionPane.showMessageDialog(jVenta,"El vehículo seleccionado no cuenta con stock"
                            ,"Error",JOptionPane.ERROR_MESSAGE);                  
                }
                else{
                    txtcodigo.setText(table_motos.getValueAt(selRow, 0).toString());
                    txtproducto.setText(table_motos.getValueAt(selRow, 1).toString());
                    txtprecio.setText(table_motos.getValueAt(selRow, 5).toString());

                    refreshMontoTotal();                    
                }

            }
        });
        
        // Listener del seguro combo
        seguro.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e){
                switch (seguro.getSelectedItem().toString()) {
                    case "No":
                        prec_seguro.setText("0");
                        break;
                    case "1 año":
                        prec_seguro.setText("100");
                        break;
                    case "2 años":
                        prec_seguro.setText("200");
                        break;
                    default:
                        prec_seguro.setText("300");
                        break;
                }
                refreshMontoTotal(); // actualizamos monto
            }
        });
        
        //Listener del radiobutton de lona = si o no
        ChangeListener changeLona= new ChangeListener(){
            public void stateChanged(ChangeEvent changEvent){
                if(siLona.getModel().isPressed())
                    prec_lona.setText("100");
                else if(noLona.getModel().isPressed())
                    prec_lona.setText("0");
                refreshMontoTotal(); // actualizamos monto
            }
        };
        siLona.addChangeListener(changeLona);
        noLona.addChangeListener(changeLona);
        
        //Listener del radiobutton de lona = si o no
        ChangeListener changeSoat= new ChangeListener(){
            public void stateChanged(ChangeEvent changEvent){
                if(siSoat.getModel().isPressed())
                    prec_soat.setText("100");
                else if(noSoat.getModel().isPressed())
                    prec_soat.setText("0");
                refreshMontoTotal(); // actualizamos monto
            }
        };
        siSoat.addChangeListener(changeSoat);
        noSoat.addChangeListener(changeSoat);
        
        // inicializamos fecha de nacimiento 
         SimpleDateFormat df = new SimpleDateFormat("dd.MM.yyyy");
        try {
            fechaNacimiento.setDate(df.parse("03.06.1994"));
            //fechaNacimiento.setDate( SimpleDateFormat.parse(tableClientes.getValueAt(selRow, 8).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(SalesMainApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void refreshMontoTotal(){
        double monto=Double.parseDouble(prec_seguro.getText())+
                    Double.parseDouble(prec_lona.getText())+
                Double.parseDouble(prec_soat.getText())+
                Double.parseDouble(txtprecio.getText());

        monto_total.setText(""+monto);        
    }
    
    public void refreshTblVenta(){
        ventaModel.ventaLst=VentaDB.queryAll();
        ventaModel.fireTableChanged(null);
    }
    
    public void refreshTblClient(){
	clientModel.ClientLst = ClienteDB.queryAll();
	clientModel.fireTableChanged(null);

    }
    
    public void refreshTblMoto(){
	motoModel.MotoLst = MotoDB.queryAll();
	motoModel.fireTableChanged(null);

    }   
    
    public void limpiarFormVenta(){
        txtdni.setText("");
        txtcliente.setText("");
        txtcodigo.setText("");
        txtproducto.setText("");
        txtprecio.setText("0");
        seguro.setSelectedIndex(0);
        prec_seguro.setText("0");
        siLona.getModel().setSelected(true);
        noLona.getModel().setSelected(false);
        prec_lona.setText("100");
        siSoat.getModel().setSelected(true);
        noSoat.getModel().setSelected(false);
        prec_soat.setText("200");
        medioPago.setSelectedIndex(0);
        tipoComprobante.setSelectedIndex(0);
        monto_total.setText("");
    }
    
    public void limpiarFormCliente(){
        textNombres.setText("");
        textDni.setText("");
        textDir.setText("");
        textPat.setText("");
        textMat.setText("");
        comboEstado.setSelectedIndex(0);
        textCel.setText("");
    }
    
    public void limpiarFormMoto(){
        textProd.setText("");
        textModel.setText("");
        textPrecLista.setText("");
        textPrecContado.setText("");
        comboTipo.setSelectedIndex(0);
        textStock.setText("");
        textColor.setText("");
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butgroupLona = new javax.swing.ButtonGroup();
        btngroupSoat = new javax.swing.ButtonGroup();
        ventana = new javax.swing.JTabbedPane();
        jPanelCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textNombres = new javax.swing.JTextField();
        textPat = new javax.swing.JTextField();
        textMat = new javax.swing.JTextField();
        textDir = new javax.swing.JTextField();
        textDni = new javax.swing.JTextField();
        textCel = new javax.swing.JTextField();
        comboEstado = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        bAddCliente = new javax.swing.JButton();
        bDelCliente = new javax.swing.JButton();
        bUpdCliente = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        fechaNacimiento = new org.jdesktop.swingx.JXDatePicker();
        jPanelMoto = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textProd = new javax.swing.JTextField();
        textModel = new javax.swing.JTextField();
        textColor = new javax.swing.JTextField();
        textPrecLista = new javax.swing.JTextField();
        textPrecContado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMotos = new javax.swing.JTable();
        bAddMoto = new javax.swing.JButton();
        bDelMoto = new javax.swing.JButton();
        bUpdMoto = new javax.swing.JButton();
        textStock = new javax.swing.JTextField();
        comboTipo = new javax.swing.JComboBox<>();
        jVenta = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        monto_total = new javax.swing.JTextField();
        medioPago = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        prec_seguro = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        siLona = new javax.swing.JRadioButton();
        noLona = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        siSoat = new javax.swing.JRadioButton();
        noSoat = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        prec_lona = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        seguro = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtdni = new javax.swing.JTextField();
        txtcliente = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_clientes = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        prec_soat = new javax.swing.JTextField();
        txtnombres = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtproducto = new javax.swing.JTextField();
        txtprecio = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_motos = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        tipoComprobante = new javax.swing.JComboBox<>();
        btnGenerarVenta = new javax.swing.JButton();
        jHistorial = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel30 = new javax.swing.JLabel();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_ventas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ventana.setName(""); // NOI18N

        jLabel1.setText("Nombres:");

        jLabel2.setText("Apellido paterno:");

        jLabel3.setText("Apellido materno:");

        jLabel4.setText("Dni:");

        jLabel5.setText("Dirección:");

        jLabel6.setText("Celular:");

        jLabel7.setText("Estado civil:");

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soltero", "Casado", "Divorciado", "Viudo" }));

        jScrollPane1.setViewportView(tableClientes);

        bAddCliente.setText("Agregar");
        bAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddClienteActionPerformed(evt);
            }
        });

        bDelCliente.setText("Eliminar");
        bDelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelClienteActionPerformed(evt);
            }
        });

        bUpdCliente.setText("Modificar");
        bUpdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdClienteActionPerformed(evt);
            }
        });

        jLabel31.setText("Fecha Nacimiento:");

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addComponent(bDelCliente)
                        .addGap(158, 158, 158)
                        .addComponent(bUpdCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bAddCliente))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textPat))
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(54, 54, 54)
                                .addComponent(textNombres))
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(15, 15, 15)
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textMat, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                    .addComponent(textDir))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(11, 11, 11))
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textCel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29))
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(textNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(textPat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(textMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel31)
                    .addComponent(fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddCliente)
                    .addComponent(bDelCliente)
                    .addComponent(bUpdCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        ventana.addTab("Clientes", jPanelCliente);

        jLabel8.setText("Producto:");

        jLabel9.setText("Modelo:");

        jLabel10.setText("Tipo:");

        jLabel11.setText("Precio Lista:");

        jLabel12.setText("Color:");

        jLabel13.setText("Precio al contado:");

        jLabel14.setText("Stock:");

        jScrollPane2.setViewportView(tableMotos);

        bAddMoto.setText("Agregar");
        bAddMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMotoActionPerformed(evt);
            }
        });

        bDelMoto.setText("Eliminar");
        bDelMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelMotoActionPerformed(evt);
            }
        });

        bUpdMoto.setText("Modificar");
        bUpdMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdMotoActionPerformed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moto carros", "4 ruedas", "Motocicletas" }));
        comboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMotoLayout = new javax.swing.GroupLayout(jPanelMoto);
        jPanelMoto.setLayout(jPanelMotoLayout);
        jPanelMotoLayout.setHorizontalGroup(
            jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMotoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(58, 58, 58)
                                .addComponent(textModel))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(50, 50, 50)
                                .addComponent(textProd))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(bDelMoto))
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                                        .addGap(158, 158, 158)
                                        .addComponent(bUpdMoto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE))
                                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(textColor, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textPrecContado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPrecLista, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textStock, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(bAddMoto, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(42, 42, 42))
        );
        jPanelMotoLayout.setVerticalGroup(
            jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(textProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPrecLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(textPrecContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(textColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(textStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddMoto)
                    .addComponent(bDelMoto)
                    .addComponent(bUpdMoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        ventana.addTab("Motos", jPanelMoto);

        jLabel15.setText("Techo de lona:");

        monto_total.setEditable(false);

        medioPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta", "Transferencia" }));

        jLabel19.setText("Precio:");

        prec_seguro.setEditable(false);
        prec_seguro.setText("0");

        jLabel20.setText("Seguro/tiempo:");

        siLona.setSelected(true);
        siLona.setText("Sí");

        noLona.setText("No");

        jLabel21.setText("Medio de pago:");

        siSoat.setSelected(true);
        siSoat.setText("Sí");

        noSoat.setText("No");

        jLabel22.setText("Precio:");

        prec_lona.setEditable(false);
        prec_lona.setText("100");

        jLabel24.setText("Soat:");

        jLabel25.setText("Monto total:");

        seguro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "1 año", "2 años", "3 años" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jLabel27.setText("Dni:");

        jLabel16.setText("Nombres:");

        txtdni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdniKeyReleased(evt);
            }
        });

        txtcliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtclienteKeyReleased(evt);
            }
        });

        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(table_clientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(18, 18, 18)
                        .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel28.setText("Precio:");

        prec_soat.setEditable(false);
        prec_soat.setText("200");

        txtnombres.setBorder(javax.swing.BorderFactory.createTitledBorder("Vehículo"));

        jLabel18.setText("Producto:");

        txtproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtproductoKeyReleased(evt);
            }
        });

        txtprecio.setEditable(false);
        txtprecio.setText("0");

        jLabel17.setText("Precio:");

        jLabel23.setText("Código:");

        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcodigoKeyReleased(evt);
            }
        });

        jScrollPane3.setViewportView(table_motos);

        javax.swing.GroupLayout txtnombresLayout = new javax.swing.GroupLayout(txtnombres);
        txtnombres.setLayout(txtnombresLayout);
        txtnombresLayout.setHorizontalGroup(
            txtnombresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtnombresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txtnombresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txtnombresLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(33, 33, 33)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(27, 27, 27)
                        .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        txtnombresLayout.setVerticalGroup(
            txtnombresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtnombresLayout.createSequentialGroup()
                .addGroup(txtnombresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txtnombresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(txtproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23))
                    .addComponent(txtprecio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel26.setText("Tipo comprobante:");

        tipoComprobante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boleta", "Factura", "Nota de crédito" }));

        btnGenerarVenta.setText("Ejecutar venta");
        btnGenerarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jVentaLayout = new javax.swing.GroupLayout(jVenta);
        jVenta.setLayout(jVentaLayout);
        jVentaLayout.setHorizontalGroup(
            jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jVentaLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtnombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20)
                            .addGroup(jVentaLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jVentaLayout.createSequentialGroup()
                                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel24))
                                        .addGap(29, 29, 29)
                                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jVentaLayout.createSequentialGroup()
                                                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(siLona)
                                                    .addComponent(siSoat))
                                                .addGap(67, 67, 67)
                                                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(noLona)
                                                    .addComponent(noSoat)))
                                            .addComponent(seguro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jVentaLayout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnGenerarVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(medioPago, 0, 140, Short.MAX_VALUE))))
                                .addGap(70, 70, 70)
                                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jVentaLayout.createSequentialGroup()
                                            .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel22)
                                                .addComponent(jLabel28)
                                                .addComponent(jLabel19))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(prec_soat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(prec_lona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jVentaLayout.createSequentialGroup()
                                            .addComponent(jLabel25)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(monto_total, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jVentaLayout.createSequentialGroup()
                                            .addComponent(jLabel26)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(prec_seguro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jVentaLayout.setVerticalGroup(
            jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(prec_seguro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addComponent(seguro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(siLona)
                            .addComponent(noLona))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(siSoat)
                            .addComponent(noSoat)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24))
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prec_lona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prec_soat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(medioPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jVentaLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(tipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(monto_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerarVenta))))
                .addGap(14, 14, 14))
        );

        ventana.addTab("Venta", jVenta);

        jLabel29.setText("Fecha inicio:");

        jLabel30.setText("Fecha fin:");

        jScrollPane5.setViewportView(table_ventas);

        javax.swing.GroupLayout jHistorialLayout = new javax.swing.GroupLayout(jHistorial);
        jHistorial.setLayout(jHistorialLayout);
        jHistorialLayout.setHorizontalGroup(
            jHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jHistorialLayout.createSequentialGroup()
                .addGroup(jHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jHistorialLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel29)
                        .addGap(28, 28, 28)
                        .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel30)
                        .addGap(28, 28, 28)
                        .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jHistorialLayout.createSequentialGroup()
                        .addContainerGap(30, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jHistorialLayout.setVerticalGroup(
            jHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jHistorialLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        ventana.addTab("Historial Ventas", jHistorial);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ventana)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ventana)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddClienteActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data del cliente
        String nombres= textNombres.getText();
        String apePat= textPat.getText();
        String apeMat= textMat.getText();
        String dir= textDir.getText();
        String dni = textDni.getText();
        String cel= textCel.getText();
        String estado= comboEstado.getSelectedItem().toString();
        Date fechNac= convertUtilToSql(fechaNacimiento.getDate());
        Date fechRegistro = convertUtilToSql(Calendar.getInstance().getTime());
        
        Cliente c= new Cliente();
        c.setNombres(nombres);
        c.setApellidoPat(apePat);
        c.setApellidoMat(apeMat);
        c.setDireccion(dir);
        c.setDni(dni);
        c.setCelular(Integer.parseInt(cel));
        c.setEstadoCivil(estado);
        c.setFechaNacimiento(convertUtilToSql(fechNac));
        c.setFechaRegistro(fechRegistro);
        
        ClienteDB.add(c);
        refreshTblClient();
        limpiarFormCliente();
    }//GEN-LAST:event_bAddClienteActionPerformed
    
    private void bDelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelClienteActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(jPanelCliente, "¿Está seguro?");
        if (res == JOptionPane.OK_OPTION) {
                ClienteDB.delete(dniSelected);			
                refreshTblClient();
                limpiarFormCliente();
        }        
    }//GEN-LAST:event_bDelClienteActionPerformed

    private void bUpdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdClienteActionPerformed
        // TODO add your handling code here:
                
        //Obteniendo Data del cliente
        String nombres= textNombres.getText();
        String apePat= textPat.getText();
        String apeMat= textMat.getText();
        String dir= textDir.getText();
        String dni = textDni.getText();
        String cel= textCel.getText();
        String estado= comboEstado.getSelectedItem().toString();
        Date fechNac= convertUtilToSql(fechaNacimiento.getDate());
        
        Cliente c= new Cliente();
        c.setId(idCliente);
        c.setNombres(nombres);
        c.setApellidoPat(apePat);
        c.setApellidoMat(apeMat);
        c.setDireccion(dir);
        c.setDni(dni);
        c.setCelular(Integer.parseInt(cel));
        c.setEstadoCivil(estado);
        c.setFechaNacimiento(fechNac);
        
        ClienteDB.update(c);
        refreshTblClient();
        limpiarFormCliente();
    }//GEN-LAST:event_bUpdClienteActionPerformed

    private void bAddMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMotoActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data de la moto
        
        String prod=textProd.getText();
        String model=textModel.getText();
        String tipo=comboTipo.getSelectedItem().toString();  
        String color=textColor.getText();
        double precLista=Double.parseDouble(textPrecLista.getText());
        double precConta=Double.parseDouble(textPrecContado.getText());
        int stock=Integer.parseInt(textStock.getText());
        
        Moto m= new Moto();
        m.setColor(color);
        m.setProducto(prod);
        m.setModelo(model);
        m.setTipo(tipo);
        m.setPrecioLista(precLista);
        m.setPrecioContado(precConta);
        m.setStock(stock);
        
        MotoDB.add(m);
        refreshTblMoto();
        limpiarFormMoto();
    }//GEN-LAST:event_bAddMotoActionPerformed

    private void bDelMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelMotoActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(jPanelMoto, "¿Está seguro?");
        if (res == JOptionPane.OK_OPTION) {
                MotoDB.delete(idMotoselected);			
                refreshTblMoto();
                limpiarFormMoto();
        }         
    }//GEN-LAST:event_bDelMotoActionPerformed

    private void bUpdMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdMotoActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data de la moto
        int idMoto=idMotoselected;
        String prod=textProd.getText();
        String model=textModel.getText();
        String tipo=comboTipo.getSelectedItem().toString();  
        String color=textColor.getText();
        double precLista=Double.parseDouble(textPrecLista.getText());
        double precConta=Double.parseDouble(textPrecContado.getText());
        int stock=Integer.parseInt(textStock.getText());        

        Moto m= new Moto();
        m.setId(idMoto);
        m.setColor(color);
        m.setProducto(prod);
        m.setModelo(model);
        m.setTipo(tipo);
        m.setPrecioLista(precLista);
        m.setPrecioContado(precConta);
        m.setStock(stock);
        
        MotoDB.update(m);
        refreshTblMoto();
        limpiarFormMoto();
    }//GEN-LAST:event_bUpdMotoActionPerformed

    private void comboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ventana.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnGenerarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarVentaActionPerformed
        // TODO add your handling code here:
        
        Date d = convertUtilToSql(Calendar.getInstance().getTime()); // Current time
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm"); // Set your date format
//        String currentData = sdf.format(d); // Get Date String according to date format
        // Recolectamos todos los datos
        
        Venta venta= new Venta();
        
        Cliente c= ClienteDB.queryByid(idCliente);
        venta.setCliente(c);
        
        Moto m=MotoDB.queryById(Integer.parseInt(txtcodigo.getText()));
        venta.setMoto(m);
        venta.setSeguro(seguro.getSelectedItem().toString());
        venta.setTechoLona(siLona.getModel().isPressed());
        venta.setSoat(siSoat.getModel().isPressed());
        venta.setMedioPago(medioPago.getSelectedItem().toString());
        venta.setTipoVenta(tipoComprobante.getSelectedItem().toString());
        venta.setMonto(Double.parseDouble(monto_total.getText()));
        venta.setFecha(d);
        VentaDB.add(venta);
        MotoDB.vender(m); //actualizamos stock
        JOptionPane.showMessageDialog(jVenta, "Se realizó con éxito la venta","Venta Confirmada",
                JOptionPane.OK_OPTION);
        
        
        refreshTblMoto();
        refreshTblVenta(); // actualizamos la tabla de ventas
        limpiarFormVenta();
    }//GEN-LAST:event_btnGenerarVentaActionPerformed

    private void txtdniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdniKeyReleased
        // TODO add your handling code here:
        String filterdni=txtdni.getText();
        sorterSaleClient.setRowFilter(RowFilter.regexFilter("^"+filterdni, 4));
    }//GEN-LAST:event_txtdniKeyReleased

    private void txtclienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclienteKeyReleased
        // TODO add your handling code here:
        String filterNombre=upperCaseAllFirst(txtcliente.getText());
        sorterSaleClient.setRowFilter(RowFilter.regexFilter("^"+filterNombre, 1));        
    }//GEN-LAST:event_txtclienteKeyReleased

    private void txtcodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyReleased
        // TODO add your handling code here:
        String codMoto=txtcodigo.getText();
        sorterSaleMoto.setRowFilter(RowFilter.regexFilter("^"+codMoto, 0));          
    }//GEN-LAST:event_txtcodigoKeyReleased

    private void txtproductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproductoKeyReleased
        // TODO add your handling code here:
        String prodMoto=txtproducto.getText();
        sorterSaleMoto.setRowFilter(RowFilter.regexFilter("^"+prodMoto, 1));         
    }//GEN-LAST:event_txtproductoKeyReleased

    public static String upperCaseAllFirst(String value) {
        if( value.length()==0){
            return "";
        }
        char[] array = value.toCharArray();
        // Uppercase first letter.
        array[0] = Character.toUpperCase(array[0]);

        // Uppercase all letters that follow a whitespace character.
        for (int i = 1; i < array.length; i++) {
            if (Character.isWhitespace(array[i - 1])) {
                array[i] = Character.toUpperCase(array[i]);
            }
        }

        // Result.
        return new String(array).replaceAll("( +)"," ").trim();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesMainApp().setVisible(true);
            }
        });
    }
    
     class MyTableModelClient extends AbstractTableModel{
	ArrayList<Cliente> ClientLst = ClienteDB.queryAll();
	String [] titles = {"Id", "Nombres", "Apellido paterno", "Apellido materno", "DNI", "Dirección", "Celular","Estado Civil","Fecha Nacimiento"};
	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 9;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return ClientLst.size();
	}

	@Override
	public Object getValueAt(int row, int col) {
		String value = "";
		switch(col){
                        case 0:  value = "" + ClientLst.get(row).getId(); break;
			case 1:  value = "" + ClientLst.get(row).getNombres(); break;
			case 2:  value = ClientLst.get(row).getApellidoPat(); break;
			case 3:  value = "" + ClientLst.get(row).getApellidoMat(); break;			
			case 4:  value= ""  + ClientLst.get(row).getDni();break;
			case 5: value="" + ClientLst.get(row).getDireccion(); break;
			case 6: value="" + ClientLst.get(row).getCelular(); break;
                        case 7: value="" + ClientLst.get(row).getEstadoCivil(); break;
                        case 8: value="" + ClientLst.get(row).getFechaNacimiento(); break;
		}
		return value;
	}
	
	public String getColumnName(int col){
		return titles[col];
	}			
    }

    
     class MyTableModelMoto extends AbstractTableModel{
	ArrayList<Moto> MotoLst = MotoDB.queryAll();
	String [] titles = { "Id","Producto", "Modelo", "Tipo", "Color", "Precio Lista", "Precio Contado","Stock"};
	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 8;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return MotoLst.size();
	}

	@Override
	public Object getValueAt(int row, int col) {
		String value = "";
		switch(col){
			case 0:  value = "" + MotoLst.get(row).getId(); break;
			case 1:  value = MotoLst.get(row).getProducto(); break;
			case 2:  value = "" + MotoLst.get(row).getModelo(); break;			
			case 3:  value= ""  + MotoLst.get(row).getTipo();break;
			case 4: value="" + MotoLst.get(row).getColor(); break;
			case 5: value="" + MotoLst.get(row).getPrecioLista(); break;
                        case 6: value="" + MotoLst.get(row).getPrecioContado(); break;
                        case 7: value="" + MotoLst.get(row).getStock(); break;
		}
		return value;
	}
	
	public String getColumnName(int col){
		return titles[col];
	}	  
    }     
     
     class MyTableModelVenta extends AbstractTableModel{
	ArrayList<Venta> ventaLst = VentaDB.queryAll();
	String [] titles = { "Id","Fecha", "Nombre de cliente", "Dni", "Producto", "Monto total"};
	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return titles.length;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return ventaLst.size();
	}

	@Override
	public Object getValueAt(int row, int col) {
		String value = "";
		switch(col){
			case 0:  value = "" + ventaLst.get(row).getId(); break;
			case 1:  value = new SimpleDateFormat("dd-MM-yyyy HH:mm").format(ventaLst.get(row).getFecha()); break;
			case 2:  value = "" + ventaLst.get(row).getCliente().getNombres()
                                + " " +ventaLst.get(row).getCliente().getApellidoPat(); break;			
			case 3:  value= ""  + ventaLst.get(row).getCliente().getDni();break;
			case 4: value="" + ventaLst.get(row).getMoto().getProducto(); break;
			case 5: value="" + ventaLst.get(row).getMonto(); break;
		}
		return value;
	}
	
	public String getColumnName(int col){
		return titles[col];
	}
      }     
     
    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {

        java.sql.Date sDate = new java.sql.Date(uDate.getTime());

        return sDate;

    }     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddCliente;
    private javax.swing.JButton bAddMoto;
    private javax.swing.JButton bDelCliente;
    private javax.swing.JButton bDelMoto;
    private javax.swing.JButton bUpdCliente;
    private javax.swing.JButton bUpdMoto;
    private javax.swing.JButton btnGenerarVenta;
    private javax.swing.ButtonGroup btngroupSoat;
    private javax.swing.ButtonGroup butgroupLona;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JComboBox<String> comboTipo;
    private org.jdesktop.swingx.JXDatePicker fechaNacimiento;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jHistorial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelMoto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel jVenta;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private javax.swing.JComboBox<String> medioPago;
    private javax.swing.JTextField monto_total;
    private javax.swing.JRadioButton noLona;
    private javax.swing.JRadioButton noSoat;
    private javax.swing.JTextField prec_lona;
    private javax.swing.JTextField prec_seguro;
    private javax.swing.JTextField prec_soat;
    private javax.swing.JComboBox<String> seguro;
    private javax.swing.JRadioButton siLona;
    private javax.swing.JRadioButton siSoat;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTable tableMotos;
    private javax.swing.JTable table_clientes;
    private javax.swing.JTable table_motos;
    private javax.swing.JTable table_ventas;
    private javax.swing.JTextField textCel;
    private javax.swing.JTextField textColor;
    private javax.swing.JTextField textDir;
    private javax.swing.JTextField textDni;
    private javax.swing.JTextField textMat;
    private javax.swing.JTextField textModel;
    private javax.swing.JTextField textNombres;
    private javax.swing.JTextField textPat;
    private javax.swing.JTextField textPrecContado;
    private javax.swing.JTextField textPrecLista;
    private javax.swing.JTextField textProd;
    private javax.swing.JTextField textStock;
    private javax.swing.JComboBox<String> tipoComprobante;
    private javax.swing.JTextField txtcliente;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdni;
    private javax.swing.JPanel txtnombres;
    private javax.swing.JTextField txtprecio;
    private javax.swing.JTextField txtproducto;
    private javax.swing.JTabbedPane ventana;
    // End of variables declaration//GEN-END:variables
}
