/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesapp.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import salesapp.controller.ClienteDB;
import salesapp.controller.MotoDB;
import salesapp.model.Cliente;
import salesapp.model.Moto;

/**
 *
 * @author GUERRA
 */
public class SalesMainApp extends javax.swing.JFrame {

    /**
     * Creates new form SalesMainApp
     */
    MyTableModelClient clientModel;
    MyTableModelMoto motoModel;
    public String dniSelected="";
    public int idMotoselected;
    public SalesMainApp() {
        initComponents();
        
        
        Cliente c= new Cliente();
        c.setNombres("Bianca");
        c.setApellidoPat("Guerra");
        c.setApellidoMat("Gongora");
        c.setDireccion("Jesus maría");
        c.setDni("73951963");
        c.setCelular(Integer.parseInt("999999999"));
        c.setEstadoCivil("Soltero");
        
        ClienteDB.add(c); 
        
        Moto m= new Moto();
        m.setColor("rojo");
        m.setProducto("torito 4t");
        m.setModelo("estandar");
        m.setTipo("motocarros");
        m.setPrecioLista(8000);
        m.setPrecioContado(7850);
        m.setStock(10);
        
        MotoDB.add(m);  
        
        initComponents2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents2(){
        // modelo para clientes
        clientModel= new MyTableModelClient();
        tableClientes.setModel(clientModel);
        tableClientes.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = tableClientes.getSelectedRow();
                dniSelected = tableClientes.getValueAt(selRow, 3).toString();  
                textNombres.setText(tableClientes.getValueAt(selRow, 0).toString());
                textPat.setText(tableClientes.getValueAt(selRow, 1).toString());
                textMat.setText(tableClientes.getValueAt(selRow, 2).toString());
                textDir.setText(tableClientes.getValueAt(selRow, 4).toString());
                textDni.setText(tableClientes.getValueAt(selRow, 3).toString());
                textCel.setText(tableClientes.getValueAt(selRow, 5).toString());
                comboEstado.setSelectedItem(tableClientes.getValueAt(selRow, 6).toString());                
            }
        });
        
        // modelo para motos
        motoModel= new MyTableModelMoto();
        tableMotos.setModel(motoModel);
        tableMotos.addMouseListener(new MouseAdapter() {		
            @Override
            public void mouseClicked(MouseEvent e){
                int selRow = tableMotos.getSelectedRow();
                 
                idMotoselected=Integer.parseInt(tableMotos.getValueAt(selRow, 0).toString());
                textProd.setText(tableMotos.getValueAt(selRow, 1).toString());
                textModel.setText(tableMotos.getValueAt(selRow, 2).toString());
                comboTipo.setSelectedItem(tableMotos.getValueAt(selRow, 3).toString());  
                textColor.setText(tableMotos.getValueAt(selRow, 4).toString());
                textPrecLista.setText(tableMotos.getValueAt(selRow, 5).toString());
                textPrecContado.setText(tableMotos.getValueAt(selRow, 6).toString());
                textStock.setText(tableMotos.getValueAt(selRow, 7).toString());              
            }
        });        
    }
    
    public void refreshTblClient(){
	clientModel.ClientLst = ClienteDB.queryAll();
	clientModel.fireTableChanged(null);

    }
    
    public void refreshTblMoto(){
	motoModel.MotoLst = MotoDB.queryAll();
	motoModel.fireTableChanged(null);

    }    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textNombres = new javax.swing.JTextField();
        textPat = new javax.swing.JTextField();
        textMat = new javax.swing.JTextField();
        textDir = new javax.swing.JTextField();
        textDni = new javax.swing.JTextField();
        textCel = new javax.swing.JTextField();
        comboEstado = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        bAddCliente = new javax.swing.JButton();
        bDelCliente = new javax.swing.JButton();
        bUpdCliente = new javax.swing.JButton();
        jPanelMoto = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textProd = new javax.swing.JTextField();
        textModel = new javax.swing.JTextField();
        textColor = new javax.swing.JTextField();
        textPrecLista = new javax.swing.JTextField();
        textPrecContado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMotos = new javax.swing.JTable();
        bAddMoto = new javax.swing.JButton();
        bDelMoto = new javax.swing.JButton();
        bUpdMoto = new javax.swing.JButton();
        textStock = new javax.swing.JTextField();
        comboTipo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 606, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Venta", jPanel1);

        jLabel1.setText("Nombres :");

        jLabel2.setText("Apellido paterno:");

        jLabel3.setText("Apellido materno:");

        jLabel4.setText("Dni:");

        jLabel5.setText("Dirección:");

        jLabel6.setText("Celular:");

        jLabel7.setText("Estado civil:");

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soltero", "Casado", "Divorciado", "Viudo" }));

        jScrollPane1.setViewportView(tableClientes);

        bAddCliente.setText("Agregar");
        bAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddClienteActionPerformed(evt);
            }
        });

        bDelCliente.setText("Eliminar");
        bDelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelClienteActionPerformed(evt);
            }
        });

        bUpdCliente.setText("Modificar");
        bUpdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(50, 50, 50)
                                        .addComponent(textNombres))
                                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                                        .addComponent(bDelCliente)
                                        .addGap(158, 158, 158)
                                        .addComponent(bUpdCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE))
                                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textMat, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                            .addComponent(textDir))))
                                .addGap(18, 18, 18))
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textPat, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addGap(17, 17, 17)))
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textCel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(bAddCliente, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(42, 42, 42))
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(textNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(textCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(textPat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(textMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddCliente)
                    .addComponent(bDelCliente)
                    .addComponent(bUpdCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Clientes", jPanelCliente);

        jLabel8.setText("Producto:");

        jLabel9.setText("Modelo:");

        jLabel10.setText("Tipo:");

        jLabel11.setText("Precio Lista:");

        jLabel12.setText("Color:");

        jLabel13.setText("Precio al contado:");

        jLabel14.setText("Stock:");

        jScrollPane2.setViewportView(tableMotos);

        bAddMoto.setText("Agregar");
        bAddMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMotoActionPerformed(evt);
            }
        });

        bDelMoto.setText("Eliminar");
        bDelMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelMotoActionPerformed(evt);
            }
        });

        bUpdMoto.setText("Modificar");
        bUpdMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdMotoActionPerformed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Moto carros", "4 ruedas", "Motocicletas" }));

        javax.swing.GroupLayout jPanelMotoLayout = new javax.swing.GroupLayout(jPanelMoto);
        jPanelMoto.setLayout(jPanelMotoLayout);
        jPanelMotoLayout.setHorizontalGroup(
            jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMotoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(58, 58, 58)
                                .addComponent(textModel))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(50, 50, 50)
                                .addComponent(textProd))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(bDelMoto))
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                                        .addGap(158, 158, 158)
                                        .addComponent(bUpdMoto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE))
                                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(textColor, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textPrecContado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPrecLista, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textStock, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(bAddMoto, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(42, 42, 42))
        );
        jPanelMotoLayout.setVerticalGroup(
            jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(textProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPrecLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(textPrecContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMotoLayout.createSequentialGroup()
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanelMotoLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(textColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(textStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddMoto)
                    .addComponent(bDelMoto)
                    .addComponent(bUpdMoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Motos", jPanelMoto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddClienteActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data del cliente
        String nombres= textNombres.getText();
        String apePat= textPat.getText();
        String apeMat= textMat.getText();
        String dir= textDir.getText();
        String dni = textDni.getText();
        String cel= textCel.getText();
        String estado= comboEstado.getSelectedItem().toString();
        
        Cliente c= new Cliente();
        c.setNombres(nombres);
        c.setApellidoPat(apePat);
        c.setApellidoMat(apeMat);
        c.setDireccion(dir);
        c.setDni(dni);
        c.setCelular(Integer.parseInt(cel));
        c.setEstadoCivil(estado);
        
        ClienteDB.add(c);
        refreshTblClient();
    }//GEN-LAST:event_bAddClienteActionPerformed

    private void bDelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelClienteActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(jPanelCliente, "¿Está seguro?");
        if (res == JOptionPane.OK_OPTION) {
                ClienteDB.delete(dniSelected);			
                refreshTblClient();
        }        
    }//GEN-LAST:event_bDelClienteActionPerformed

    private void bUpdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdClienteActionPerformed
        // TODO add your handling code here:
                
        //Obteniendo Data del cliente
        String nombres= textNombres.getText();
        String apePat= textPat.getText();
        String apeMat= textMat.getText();
        String dir= textDir.getText();
        String dni = textDni.getText();
        String cel= textCel.getText();
        String estado= comboEstado.getSelectedItem().toString();
        
        Cliente c= new Cliente();
        c.setNombres(nombres);
        c.setApellidoPat(apePat);
        c.setApellidoMat(apeMat);
        c.setDireccion(dir);
        c.setDni(dni);
        c.setCelular(Integer.parseInt(cel));
        c.setEstadoCivil(estado);
        
        ClienteDB.update(c);
        refreshTblClient();
    }//GEN-LAST:event_bUpdClienteActionPerformed

    private void bAddMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMotoActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data de la moto
        
        String prod=textProd.getText();
        String model=textModel.getText();
        String tipo=comboTipo.getSelectedItem().toString();  
        String color=textColor.getText();
        double precLista=Double.parseDouble(textPrecLista.getText());
        double precConta=Double.parseDouble(textPrecContado.getText());
        int stock=Integer.parseInt(textStock.getText());
        
        Moto m= new Moto();
        m.setColor(color);
        m.setProducto(prod);
        m.setModelo(model);
        m.setTipo(tipo);
        m.setPrecioLista(precLista);
        m.setPrecioContado(precConta);
        m.setStock(stock);
        
        MotoDB.add(m);
        refreshTblMoto();
    }//GEN-LAST:event_bAddMotoActionPerformed

    private void bDelMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelMotoActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(jPanelMoto, "¿Está seguro?");
        if (res == JOptionPane.OK_OPTION) {
                MotoDB.delete(idMotoselected);			
                refreshTblMoto();
        }         
    }//GEN-LAST:event_bDelMotoActionPerformed

    private void bUpdMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdMotoActionPerformed
        // TODO add your handling code here:
        
        //Obteniendo Data de la moto
        int idMoto=idMotoselected;
        String prod=textProd.getText();
        String model=textModel.getText();
        String tipo=comboTipo.getSelectedItem().toString();  
        String color=textColor.getText();
        double precLista=Double.parseDouble(textPrecLista.getText());
        double precConta=Double.parseDouble(textPrecContado.getText());
        int stock=Integer.parseInt(textStock.getText());        

        Moto m= new Moto();
        m.setId(idMoto);
        m.setColor(color);
        m.setProducto(prod);
        m.setModelo(model);
        m.setTipo(tipo);
        m.setPrecioLista(precLista);
        m.setPrecioContado(precConta);
        m.setStock(stock);
        
        MotoDB.update(m);
        refreshTblMoto();
    }//GEN-LAST:event_bUpdMotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesMainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesMainApp().setVisible(true);
            }
        });
    }
    
     class MyTableModelClient extends AbstractTableModel{
	ArrayList<Cliente> ClientLst = ClienteDB.queryAll();
	String [] titles = { "Nombres", "Apellido paterno", "Apellido materno", "DNI", "Dirección", "Celular","Estado Civil"};
	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 7;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return ClientLst.size();
	}

	@Override
	public Object getValueAt(int row, int col) {
		String value = "";
		switch(col){
			case 0:  value = "" + ClientLst.get(row).getNombres(); break;
			case 1:  value = ClientLst.get(row).getApellidoPat(); break;
			case 2:  value = "" + ClientLst.get(row).getApellidoMat(); break;			
			case 3:  value= ""  + ClientLst.get(row).getDni();break;
			case 4: value="" + ClientLst.get(row).getDireccion(); break;
			case 5: value="" + ClientLst.get(row).getCelular(); break;
                        case 6: value="" + ClientLst.get(row).getEstadoCivil(); break;
		}
		return value;
	}
	
	public String getColumnName(int col){
		return titles[col];
	}			
    }

    
     class MyTableModelMoto extends AbstractTableModel{
	ArrayList<Moto> MotoLst = MotoDB.queryAll();
	String [] titles = { "Id","Producto", "Modelo", "Tipo", "Color", "Precio Lista", "Precio Contado","Stock"};
	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 8;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return MotoLst.size();
	}

	@Override
	public Object getValueAt(int row, int col) {
		String value = "";
		switch(col){
			case 0:  value = "" + MotoLst.get(row).getId(); break;
			case 1:  value = MotoLst.get(row).getProducto(); break;
			case 2:  value = "" + MotoLst.get(row).getModelo(); break;			
			case 3:  value= ""  + MotoLst.get(row).getTipo();break;
			case 4: value="" + MotoLst.get(row).getColor(); break;
			case 5: value="" + MotoLst.get(row).getPrecioLista(); break;
                        case 6: value="" + MotoLst.get(row).getPrecioContado(); break;
                        case 7: value="" + MotoLst.get(row).getStock(); break;
		}
		return value;
	}
	
	public String getColumnName(int col){
		return titles[col];
	}			
    }     
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddCliente;
    private javax.swing.JButton bAddMoto;
    private javax.swing.JButton bDelCliente;
    private javax.swing.JButton bDelMoto;
    private javax.swing.JButton bUpdCliente;
    private javax.swing.JButton bUpdMoto;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelMoto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTable tableMotos;
    private javax.swing.JTextField textCel;
    private javax.swing.JTextField textColor;
    private javax.swing.JTextField textDir;
    private javax.swing.JTextField textDni;
    private javax.swing.JTextField textMat;
    private javax.swing.JTextField textModel;
    private javax.swing.JTextField textNombres;
    private javax.swing.JTextField textPat;
    private javax.swing.JTextField textPrecContado;
    private javax.swing.JTextField textPrecLista;
    private javax.swing.JTextField textProd;
    private javax.swing.JTextField textStock;
    // End of variables declaration//GEN-END:variables
}
